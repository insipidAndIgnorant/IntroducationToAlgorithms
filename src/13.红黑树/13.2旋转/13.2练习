13.2-1
RIGHT-ROTATE(T,x)
  y = x.left

  x.left = y.right
  if y.right != NIL
    y.right.p = x

  y.p = x.p
  if x.p == NIL
    T.root = y
  else if x.p.left == x
    y.p.left = y
  else
    y.p.right = y

  y.right = x
  x.p = y

13.2-2
  根据二叉树性质
  叶结点数 = 度为2结点数 + 1
  叶 + 度为2数 + 度为1数 = n   =>  2* 度为2结点数 + 1 + 度为1结点数 = n
  度为2有两种旋转，1有一种旋转
  2 * 度为2 + 1 * 度为1
  = n - 1

13.2-3
  a:+1 b:0  c:-1

13.2.4
  1.以先序遍历的顺序右旋，没有左子树跳过 O(n)
  2.此时树为右伸展的单链并已排序
  3.通过不断左旋使原顶点再次成为顶点
  4.用3的方式修正第二层、第三层。。。。

12.2.5
  a: T1:一条右伸展单链 T2:一条左伸展单链 
  b: