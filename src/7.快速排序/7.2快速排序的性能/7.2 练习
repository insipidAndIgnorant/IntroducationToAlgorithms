7.2-1
  T(n) = c(n-1)^2 + n
     = cn^2 + c - 2cn + n
  证明: 存在c 使T(n) <= cn^2
  cn^2 + c - 2cn + n <= cn^2
  令c = 1
  n^2 -n +1 <= n^2
  n>= 1时满足

7.2-2
  O(n^2)

7.2-3
  当数组元素不同且降序排列时，分区结果为指针为1，剩余全为大于指针元素，划分操作为O(n),
  总时间为∑i=1 to n i  = O(n^2)

7.2-4
  假设序列中倒序对有dd对，那么插入排序的时间复杂度为O(n+d)。由于该序列几乎为有序序列，所以dd非常小，插入排序时间复杂度接近O(n)；
  而用QUICKSORT时，因为序列几乎有序，所以会经常出现空子数组，所以QUICKSORT性能会很不好，时间复杂度接近Θ(n^2)

7.2-5
  n a^x = 1
  a^x = 1/n
    x = log a (1/n)
    x = lg 1/n  / lga  = -lgn/lga
  n (1-a)^x = 1
          x = log(1-a) 1/n
          x = -lgn/ lg(1-a)

7.2-6
  产生1-a : a则最后一位为第na大或第n(1-a)大；
  比其更均衡的情况则是在 na 到 n(1-a)之间
  [ n(1-a) - na ] / n = 1- 2a